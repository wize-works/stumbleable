name: Rollback Deployment

on:
    workflow_dispatch:
        inputs:
            service:
                description: "Service to rollback"
                required: true
                type: choice
                options:
                    - all
                    - ui-portal
                    - discovery-service
                    - interaction-service
                    - user-service
                    - crawler-service
            revision:
                description: "Revision number to rollback to (leave empty for previous)"
                required: false
                type: string

env:
    AKS_CLUSTER_NAME: ${{ secrets.AKS_CLUSTER_NAME }}
    AKS_RESOURCE_GROUP: ${{ secrets.AKS_RESOURCE_GROUP }}
    NAMESPACE: stumbleable

jobs:
    rollback:
        name: Rollback Deployment
        runs-on: ubuntu-latest

        steps:
            - name: Azure Login
              uses: azure/login@v1
              with:
                  creds: ${{ secrets.AZURE_CREDENTIALS }}

            - name: Set AKS context
              uses: azure/aks-set-context@v3
              with:
                  resource-group: ${{ env.AKS_RESOURCE_GROUP }}
                  cluster-name: ${{ env.AKS_CLUSTER_NAME }}

            - name: Rollback deployment
              run: |
                  if [ "${{ inputs.service }}" == "all" ]; then
                    echo "Rolling back all services..."
                    kubectl rollout undo deployment/ui-portal -n ${{ env.NAMESPACE }}
                    kubectl rollout undo deployment/discovery-service -n ${{ env.NAMESPACE }}
                    kubectl rollout undo deployment/interaction-service -n ${{ env.NAMESPACE }}
                    kubectl rollout undo deployment/user-service -n ${{ env.NAMESPACE }}
                    kubectl rollout undo deployment/crawler-service -n ${{ env.NAMESPACE }}
                  else
                    echo "Rolling back ${{ inputs.service }}..."
                    if [ -n "${{ inputs.revision }}" ]; then
                      kubectl rollout undo deployment/${{ inputs.service }} --to-revision=${{ inputs.revision }} -n ${{ env.NAMESPACE }}
                    else
                      kubectl rollout undo deployment/${{ inputs.service }} -n ${{ env.NAMESPACE }}
                    fi
                  fi

            - name: Wait for rollback
              run: |
                  if [ "${{ inputs.service }}" == "all" ]; then
                    kubectl rollout status deployment/ui-portal -n ${{ env.NAMESPACE }} --timeout=5m
                    kubectl rollout status deployment/discovery-service -n ${{ env.NAMESPACE }} --timeout=5m
                    kubectl rollout status deployment/interaction-service -n ${{ env.NAMESPACE }} --timeout=5m
                    kubectl rollout status deployment/user-service -n ${{ env.NAMESPACE }} --timeout=5m
                    kubectl rollout status deployment/crawler-service -n ${{ env.NAMESPACE }} --timeout=5m
                  else
                    kubectl rollout status deployment/${{ inputs.service }} -n ${{ env.NAMESPACE }} --timeout=5m
                  fi

            - name: Verify rollback
              run: |
                  kubectl get pods -n ${{ env.NAMESPACE }}
                  kubectl get deployments -n ${{ env.NAMESPACE }}

            - name: Rollback complete
              run: |
                  echo "âœ… Rollback completed successfully!"
                  echo "Service: ${{ inputs.service }}"
                  echo "$(kubectl get pods -n ${{ env.NAMESPACE }})"
